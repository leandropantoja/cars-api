---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: {{ .Values.metadata.name }}
  namespace: {{ .Values.labels.namespace }}
  labels:
    serviceType: {{ .Values.spec.selector.serviceType }}
spec:
  replicas: 8
  strategy:
    type: RollingUpdate
<<<<<<< HEAD
    rollingUpdate: 
      maxUnavailable: 0 
    rollingUp      maxSurge: 100%
=======
    rollingUp      maxSurge: 50%
    
>>>>>>> 962a627e0a6e27647eaab0fc2a797a966874a300
  template:
    metadata:
      name: {{ .Values.metadata.name }}
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: {{ .Values.metadata.name }}
        version: v1
        serviceType: {{ .Values.spec.selector.serviceType }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        name: {{ .Values.metadata.name }}
        ports:
<<<<<<< HEAD
          - name: http
            containerPort: {{ .Values.service.port }}
            protocol: TCP
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 15
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 15
=======
        - containerPort: {{ .Values.service.port }}
        livenessProbe:
          httpGet:
            path: /actuator
            port: {{ .Values.service.nodePort }}
          timeoutSeconds: 1
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator
            port: {{ .Values.service.nodePort }}
          timeoutSeconds: 1
          periodSeconds: 5
        resources: {}
      - args:
        - proxy
        - sidecar
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - {{ .Values.metadata.name }}
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:15007
        - --discoveryRefreshDelay
        - 1s
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --connectTimeout
        - 10s
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_METAJSON_LABELS
          value: |
            {"app":"{{ .Values.metadata.name }}","version":"v1"}
        image: docker.io/istio/proxyv2:1.0.5
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http-envoy-prom
          protocol: TCP
        resources:
          requests:
            cpu: 10m
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args:
        - -p
        - "15001"
        - -u
        - "1337"
        - -m
        - REDIRECT
        - -i
        - '*'
        - -x
        - ""
        - -b
        - "8084"
        - -d
        - ""
        image: docker.io/istio/proxy_init:1.0.5
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      volumes:
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
status: {}
---
>>>>>>> 962a627e0a6e27647eaab0fc2a797a966874a300
